/**
 * @fileoverview GraphQL schema definitions for the smart apparel alert system
 * Implements comprehensive alert types, queries, mutations and subscriptions
 * for real-time biomechanical and physiological monitoring with >85% prediction accuracy
 * @version 1.0.0
 */

import { gql } from 'graphql-tag'; // ^2.12.6
import { IAlert } from '../../../interfaces/alert.interface';
import { ALERT_TYPES } from '../../../constants/alert.constants';

export const alertSchema = gql`
  """
  Enum defining categories of alerts that can be generated by the system
  """
  enum AlertType {
    BIOMECHANICAL
    PHYSIOLOGICAL
    MOVEMENT_PATTERN
    MUSCLE_IMBALANCE
  }

  """
  Enum defining severity levels for alert prioritization
  """
  enum AlertSeverity {
    LOW
    MEDIUM
    HIGH
    CRITICAL
  }

  """
  Enum defining possible states in the alert lifecycle
  """
  enum AlertStatus {
    ACTIVE
    ACKNOWLEDGED
    RESOLVED
    DISMISSED
  }

  """
  Type defining trend analysis data for alerts
  """
  type AlertTrendAnalysis {
    direction: String!
    rate: Float!
    timeWindow: Int!
  }

  """
  Type defining detailed alert information including measurements and analysis
  """
  type AlertDetails {
    threshold: Float!
    currentValue: Float!
    location: String!
    confidenceScore: Float!
    sensorData: JSON!
    deviationPercentage: Float!
    historicalBaseline: Float!
    trendAnalysis: AlertTrendAnalysis!
    relatedMetrics: JSON!
    riskFactors: [String!]!
    metadata: JSON
  }

  """
  Type defining audit trail entries for alert lifecycle
  """
  type AlertAudit {
    timestamp: DateTime!
    action: String!
    userId: ID!
    notes: String
  }

  """
  Type defining comprehensive alert data structure
  """
  type Alert {
    id: ID!
    type: AlertType!
    severity: AlertSeverity!
    status: AlertStatus!
    sessionId: ID!
    timestamp: DateTime!
    message: String!
    details: AlertDetails!
    acknowledgedBy: ID
    acknowledgedAt: DateTime
    resolvedBy: ID
    resolvedAt: DateTime
    resolutionNotes: String
    confidenceScore: Float!
    auditLog: [AlertAudit!]!
  }

  """
  Type defining alert subscription preferences
  """
  type AlertSubscription {
    userId: ID!
    alertTypes: [AlertType!]!
    minSeverity: AlertSeverity!
    notificationChannels: [String!]!
    schedulePreferences: JSON!
    customThresholds: JSON!
    mutePeriods: [JSON!]!
    escalationRules: [JSON!]!
  }

  """
  Input type for alert subscription updates
  """
  input AlertSubscriptionInput {
    alertTypes: [AlertType!]!
    minSeverity: AlertSeverity!
    notificationChannels: [String!]!
    schedulePreferences: JSON!
    customThresholds: JSON!
    mutePeriods: [JSON!]
    escalationRules: [JSON!]
  }

  """
  Type for paginated alert results
  """
  type AlertConnection {
    edges: [AlertEdge!]!
    pageInfo: PageInfo!
    totalCount: Int!
  }

  type AlertEdge {
    node: Alert!
    cursor: String!
  }

  type PageInfo {
    hasNextPage: Boolean!
    endCursor: String!
  }

  type Query {
    """
    Retrieve a single alert by ID
    """
    getAlert(id: ID!): Alert!

    """
    Retrieve paginated alerts with optional filtering
    """
    getAlerts(
      sessionId: ID!
      type: AlertType
      severity: AlertSeverity
      status: AlertStatus
      minConfidence: Float
      page: Int
      pageSize: Int
    ): AlertConnection!

    """
    Retrieve currently active alerts
    """
    getActiveAlerts(minConfidence: Float): [Alert!]!

    """
    Retrieve alert history for a specific user
    """
    getAlertHistory(
      userId: ID!
      startTime: DateTime!
      endTime: DateTime
      types: [AlertType!]
    ): [Alert!]!

    """
    Retrieve alert subscription preferences
    """
    getAlertSubscription(userId: ID!): AlertSubscription!
  }

  type Mutation {
    """
    Acknowledge an alert
    """
    acknowledgeAlert(
      id: ID!
      notes: String
    ): Alert!

    """
    Resolve an alert with resolution notes
    """
    resolveAlert(
      id: ID!
      resolutionNotes: String!
    ): Alert!

    """
    Dismiss an alert as non-actionable
    """
    dismissAlert(
      id: ID!
      reason: String!
    ): Alert!

    """
    Update alert subscription preferences
    """
    updateAlertSubscription(
      subscription: AlertSubscriptionInput!
    ): AlertSubscription!

    """
    Bulk update multiple alerts
    """
    bulkUpdateAlerts(
      ids: [ID!]!
      status: AlertStatus!
      notes: String
    ): [Alert!]!
  }

  type Subscription {
    """
    Subscribe to new alerts with optional filtering
    """
    onAlert(
      types: [AlertType!]
      minSeverity: AlertSeverity
      minConfidence: Float
    ): Alert!

    """
    Subscribe to alert status changes
    """
    onAlertStatusChange(
      id: ID!
    ): Alert!

    """
    Subscribe to alerts for a specific user
    """
    onUserAlerts(
      userId: ID!
      types: [AlertType!]
    ): Alert!
  }

  """
  Custom scalar types
  """
  scalar DateTime
  scalar JSON
`;