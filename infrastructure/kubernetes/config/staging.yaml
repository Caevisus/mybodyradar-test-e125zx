---
# Staging Environment Configuration for Smart Apparel System
apiVersion: v1
kind: ConfigMap
metadata:
  name: staging-environment-config
  namespace: backend
  labels:
    app: smart-apparel
    environment: staging
data:
  ENVIRONMENT: "staging"
  CLUSTER_NAME: "smart-apparel-staging"
  REGION: "us-east-1"
---
# API Server Resource Configuration
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-deployment
  namespace: backend
  labels:
    app: smart-apparel
    environment: staging
spec:
  replicas: 2
  template:
    spec:
      containers:
      - name: api-server
        resources:
          requests:
            cpu: "500m"
            memory: "1Gi"
          limits:
            cpu: "1"
            memory: "2Gi"
---
# Worker Resource Configuration
apiVersion: apps/v1
kind: Deployment
metadata:
  name: worker-deployment
  namespace: backend
  labels:
    app: smart-apparel
    environment: staging
spec:
  replicas: 2
  template:
    spec:
      containers:
      - name: data-worker
        resources:
          requests:
            cpu: "1"
            memory: "2Gi"
          limits:
            cpu: "2"
            memory: "4Gi"
---
# Kafka Cluster Configuration
apiVersion: kafka.strimzi.io/v1beta2
kind: Kafka
metadata:
  name: kafka-cluster
  namespace: backend
spec:
  kafka:
    replicas: 2
    resources:
      requests:
        cpu: "1"
        memory: "2Gi"
      limits:
        cpu: "2"
        memory: "4Gi"
    storage:
      type: persistent-claim
      size: 50Gi
      deleteClaim: false
    config:
      offsets.topic.replication.factor: 2
      transaction.state.log.replication.factor: 2
      transaction.state.log.min.isr: 1
      default.replication.factor: 2
      min.insync.replicas: 1
    topics:
    - name: sensor-data
      partitions: 6
      replicas: 2
      config:
        retention.ms: 604800000
    - name: alerts
      partitions: 3
      replicas: 2
      config:
        retention.ms: 2592000000
---
# Network Policies
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: staging-network-policy
  namespace: backend
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          name: frontend
    - namespaceSelector:
        matchLabels:
          name: monitoring
  egress:
  - to:
    - namespaceSelector:
        matchLabels:
          name: storage
---
# Pod Security Context
apiVersion: v1
kind: ConfigMap
metadata:
  name: pod-security-context
  namespace: backend
data:
  securityContext: |
    runAsNonRoot: true
    runAsUser: 1000
    fsGroup: 1000
    readOnlyRootFilesystem: true
---
# TLS Configuration
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: staging-tls
  namespace: backend
spec:
  secretName: staging-tls-secret
  duration: 2160h
  renewBefore: 360h
  subject:
    organizations:
    - Smart Apparel
  commonName: staging.smart-apparel.com
  isCA: false
  privateKey:
    algorithm: RSA
    encoding: PKCS1
    size: 2048
  usages:
    - server auth
    - client auth
  dnsNames:
    - staging.smart-apparel.com
    - "*.staging.smart-apparel.com"
---
# Monitoring Configuration
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: staging-monitor
  namespace: monitoring
spec:
  selector:
    matchLabels:
      app: smart-apparel
      environment: staging
  endpoints:
  - port: metrics
    interval: 15s
    scrapeTimeout: 10s
  namespaceSelector:
    matchNames:
    - backend
---
# Resource Quotas
apiVersion: v1
kind: ResourceQuota
metadata:
  name: staging-quota
  namespace: backend
spec:
  hard:
    requests.cpu: "16"
    requests.memory: "32Gi"
    limits.cpu: "16"
    limits.memory: "32Gi"
    pods: "50"
    services: "20"
    persistentvolumeclaims: "10"