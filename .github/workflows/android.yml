name: Android CI/CD

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'src/android/**'
      - '.github/workflows/android.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'src/android/**'
      - '.github/workflows/android.yml'

# Permissions required for security scanning and artifact publishing
permissions:
  contents: write
  security-events: write
  actions: read
  id-token: write

# Concurrency control to prevent redundant workflow runs
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  JAVA_VERSION: '17'
  GRADLE_VERSION: '8.1.0'
  ANDROID_SDK: '34'
  GRADLE_BUILD_CACHE_KEY: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
  KEYSTORE_PATH: ${{ runner.temp }}/release.keystore

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-latest
    environment: Development
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: 'temurin'
          cache: 'gradle'
          
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: java
          queries: security-and-quality
          
      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2
        with:
          gradle-version: ${{ env.GRADLE_VERSION }}
          cache-read-only: false
          arguments: --build-cache
          
      - name: Run ktlint
        run: |
          cd src/android
          ./gradlew ktlintCheck
          
      - name: Run unit tests
        run: |
          cd src/android
          ./gradlew test koverXmlReport
          
      - name: Android Lint
        run: |
          cd src/android
          ./gradlew lint
          
      - name: Build debug APK
        run: |
          cd src/android
          ./gradlew assembleDebug
          
      - name: Run instrumentation tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 29
          target: google_apis
          arch: x86_64
          profile: Nexus 6
          script: |
            cd src/android
            ./gradlew connectedCheck
            
      - name: Upload test reports
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: test-reports
          path: |
            src/android/app/build/reports/
            src/android/app/build/test-results/
          retention-days: 14
          
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2
        
      - name: Upload debug APK
        uses: actions/upload-artifact@v3
        with:
          name: debug-apk
          path: src/android/app/build/outputs/apk/debug/app-debug.apk
          retention-days: 14

  release:
    name: Release Build
    needs: build
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    environment: Production
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: 'temurin'
          cache: 'gradle'
          
      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2
        with:
          gradle-version: ${{ env.GRADLE_VERSION }}
          
      - name: Decode Keystore
        env:
          KEYSTORE_BASE64: ${{ secrets.RELEASE_KEYSTORE_BASE64 }}
        run: |
          echo "$KEYSTORE_BASE64" | base64 -d > ${{ env.KEYSTORE_PATH }}
          
      - name: Build Release APK
        env:
          KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
          KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
          KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
        run: |
          cd src/android
          ./gradlew assembleRelease \
            -Pandroid.injected.signing.store.file=${{ env.KEYSTORE_PATH }} \
            -Pandroid.injected.signing.store.password=${{ secrets.KEYSTORE_PASSWORD }} \
            -Pandroid.injected.signing.key.alias=${{ secrets.KEY_ALIAS }} \
            -Pandroid.injected.signing.key.password=${{ secrets.KEY_PASSWORD }}
            
      - name: Verify APK signature
        run: |
          cd src/android
          ./gradlew validateSigningRelease
          
      - name: Generate changelog
        id: changelog
        uses: actions/github-script@v6
        with:
          script: |
            const commits = await github.rest.repos.listCommits({
              owner: context.repo.owner,
              repo: context.repo.repo,
              sha: context.sha,
              per_page: 10
            });
            return commits.data.map(commit => `* ${commit.commit.message}`).join('\n');
            
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: src/android/app/build/outputs/apk/release/app-release.apk
          body: ${{ steps.changelog.outputs.result }}
          draft: false
          prerelease: false
          token: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Upload release APK
        uses: actions/upload-artifact@v3
        with:
          name: release-apk
          path: src/android/app/build/outputs/apk/release/app-release.apk
          retention-days: 30
          
      - name: Cleanup secrets
        if: always()
        run: |
          rm -f ${{ env.KEYSTORE_PATH }}